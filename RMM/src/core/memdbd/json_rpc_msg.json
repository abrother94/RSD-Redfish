memdbd JSON RPC packet example:
====================================
port: 24000
====================================

create_node:
------------------------------------
format:
req:
{
	"json_rpc": "2.0",
	"id": <id>,
	"method": "create_node",
	"params": {
		"p_parent": <parent>,
		"p_type": <p_type>,
		"p_snapshot_flag": <p_snapshot_flag>,
		"db_name": "RMM",
		"node_id": <node_id>,
		"lock_id": <lock_id>
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": <id>,
	"result": {
		"node_id": <node_id>
	}
}

for example:
req:
{
	"json_rpc": "2.0",
	"id": 109,
	"method": "create_node",
	"params": {
		"p_parent": 10000002,
		"p_type": "TZONE",
		"p_snapshot_flag": 1,
		"db_name": "RMM",
		"node_id": 0,
		"lock_id": 0
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": 109,
	"result": {
		"node_id": 10000003
	}
}


node_destroy:
------------------------------------
format:
req:
{
	"json_rpc": "2.0",
	"id": <id>,
	"method": "node_destroy",
	"params": {
		"db_name": "RMM",
		"node_id": <node_id>,
		"lock_id": <lock_id>
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": <id>,
	"result": {
		"node_id": <node_id>
	}
}

for example:
req:
{
	"json_rpc": "2.0",
	"id": 783,
	"method": "node_destroy",
	"params": {
		"db_name": "RMM",
		"node_id": 10000050,
		"lock_id": 0
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": 783,
	"result": {
		"node_id": 10000050
	}
}


attrbute_get:
------------------------------------
format:
req:
{
	"json_rpc": "2.0",
	"id": <id>,
	"method": "attrbute_get",
	"params": {
		"p_name": <p_name>,
		"db_name": "RMM",
		"node_id": <node_id>,
		"lock_id": <lock_id>
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": <id>,
	"result": {
		"r_attr": {
			"cookie": <cookie>,
			"data": <data>
		},
		"node_id": <node_id>
	}
}

for example:
req:
{
	"json_rpc": "2.0",
	"id": 69,
	"method": "attrbute_get",
	"params": {
		"p_name": "loc_id",
		"db_name": "RMM",
		"node_id": 10000002,
		"lock_id": 0
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": 69,
	"result": {
		"r_attr": {
			"cookie": 0,
			"data": "1"
		},
		"node_id": 10000002
	}
}


attrbute_set:
------------------------------------
format:
req:
{
	"json_rpc": "2.0",
	"id": <id>,
	"method": "attrbute_set",
	"params": {
		"p_cookie": <cookie>,
		"p_snapshot_flag": <snapshot_flag>,
		"p_name": <p_name>,
		"p_data": <p_data>,
		"db_name": "RMM",
		"node_id": <node_id>,
		"lock_id": <lock_id>
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": <id>,
	"result": {
		"node_id": <node_id>
	}
}

for example:
req:
{
	"json_rpc": "2.0",
	"id": 5,
	"method": "attrbute_set",
	"params": {
		"p_cookie": 0,
		"p_snapshot_flag": 0,
		"p_name": "reg_name",
		"p_data": "asset_module",
		"db_name": "RMM",
		"node_id": 10000001,
		"lock_id": 0
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": 5,
	"result": {
		"node_id": 10000001
	}
}


list_node:
------------------------------------
format:
req:
{
	"json_rpc": "2.0",
	"id": <id>,
	"method": "list_node",
	"params": {
		"p_type_max": <p_type_max>,
		"p_type_min": <p_type_min>,
		"db_name": "RMM",
		"node_id": <node_id>,
		"lock_id": <lock_id>
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": <id>,
	"result": {
		"r_nodes": [
			{
				"parent": <parent>,
				"node_id": <node_id>,
				"type": <type>
			}
		]
	}
}

for example:
req:
{
	"json_rpc": "2.0",
	"id": 58,
	"method": "list_node",
	"params": {
		"p_type_max": "MC_TYPE_END",
		"p_type_min": "RMC",
		"db_name": "RMM",
		"node_id": 0,
		"lock_id": 0
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": 58,
	"result": {
		"r_nodes": [
			{
				"parent": 0,
				"node_id": 0,
				"type": "RMC"
			},
			{
				"parent": 0,
				"node_id": 10000000,
				"type": "REG"
			},
			{
				"parent": 10000000,
				"node_id": 10000001,
				"type": "REG_MODULE"
			}
		]
	}
}


list_subnode:
------------------------------------
format:
req:
{
	"json_rpc": "2.0",
	"id": <id>,
	"method": "list_subnode",
	"params": {
		"p_type_match": <p_type_match>,
		"p_type_value": <p_type_value>,
		"db_name": "RMM",
		"node_id": <node_id>,
		"lock_id": <lock_id>
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": <id>,
	"result": {
		"r_nodes": [],
		"node_id": <node_id>
	}
}

for example:
req:
{
	"json_rpc": "2.0",
	"id": 108,
	"method": "list_subnode",
	"params": {
		"p_type_match": 1,
		"p_type_value": "TZONE",
		"db_name": "RMM",
		"node_id": 10000002,
		"lock_id": 0
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": 108,
	"result": {
		"r_nodes": [],
		"node_id": 10000002
	}
}


node_get_by_node_id:
------------------------------------
format:
req:{
	"json_rpc": "2.0",
	"id": <id>,
	"method": "node_get_by_node_id",
	"params": {
		"db_name": "RMM",
		"node_id": <node_id>,
		"lock_id": <lock_id>
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": <id>,
	"result": {
		"r_node": {
			"parent": <parent>,
			"node_id": <node_id>,
			"type": <type>
		}
	}
}

for example:
req:
{
	"json_rpc": "2.0",
	"id": 111,
	"method": "node_get_by_node_id",
	"params": {
		"db_name": "RMM",
		"node_id": 10000003,
		"lock_id": 0
	}
}
resp:
{
	"json_rpc": "2.0",
	"id": 111,
	"result": {
		"r_node": {
			"parent": 10000002,
			"node_id": 10000003,
			"type": "TZONE"
		}
	}
}


