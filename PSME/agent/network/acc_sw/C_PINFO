PlatformPath="/etc/onl/platform"

if [ -f "${PlatformPath}" ];then
    #ONL
    HW_type=`cat  ${PlatformPath}`
    ONLPDUMP="/lib/platform-config/${HW_type}/onl/bin/onlpdump"
else
    #SONIC
    HW_type=`/usr/local/bin/sonic-cfggen -v platform`
    ONLPDUMP="/usr/bin/decode-syseeprom"
fi

. /etc/psme/HW_TYPE

Config_File="/etc/psme/platform_info.conf"
ASSET_TAG="/etc/psme/ASSET_TAG"
PlatformPath="/etc/onl/platform"

J_B_START()
{
    echo "{" >> ${Config_File}
}
J_B_END()
{
    echo "}" >> ${Config_File}
}

J_COMMA()
{
    echo "," >> ${Config_File}
}

J_O_START()
{
    echo "\"$1\":[" >> ${Config_File}
    J_B_START
}

J_O_END()
{
    J_B_END
    echo "]" >> ${Config_File}

}

IPV4_ITEMS()
{
echo "
\""ipv4"\" : \""localhost"\",
\""port"\" : 7788,
\""slot"\" : 1
"  >> ${Config_File}
}

CHASSIS_ITEMS()
{
echo "
\""chassis"\" : {
\""type"\"             : \""${TYPE}"\",
\""size"\"             : 1,
\""locationOffset"\"   : 1,
\""parentId"\"         : 1,
\""platform"\"         : \""${PLATFORM}"\",
\""networkInterface"\" : \""${NINF}"\",
\""asset_tag"\"        : \""${ASSET_TAG_C}"\",
\""manufacturer"\"     : \""${MANUFACTURER}"\",
\""model_number"\"     : \""${MODULE_NUMBER}"\",
\""serial_number"\"    : \""${SERIAL_NUMBER}"\"
}"  >> ${Config_File}
}

ONLP_PORTS()
{
i=0
echo "
\"ports\" :{" >> ${Config_File}

while [ "$i" -lt "${PORT_MAX}" ];do
    type=${mapping[${i}]}
    ii=$(($i+1))
    if [ "$type" == "E" ];then
        echo " \"port$ii\":\"Ether\"   " >> ${Config_File} 
        if [ "$ii" != "${PORT_MAX}" ];then
            echo "," >> ${Config_File}
        fi
    else
        echo " \"port$ii\":\"XSFP\"   " >> ${Config_File}
        if [ "$ii" != "${PORT_MAX}" ];then
            echo "," >> ${Config_File}
        fi
    fi    
    i=$(($i+1))
done

echo "}" >> ${Config_File}
}

ONLP_FANS()
{
i=0
echo "
\"fans\" :{" >> ${Config_File}

while [ "$i" -lt "${FAN_MAX}" ];do
    type=${fans_type[${i}]}
    ii=$(($i+1))
    if [ "$type" == "S" ];then
        echo " \"fan$ii\":\"System\"   " >> ${Config_File} 
        if [ "$ii" != "${FAN_MAX}" ];then
            echo "," >> ${Config_File}
        fi
    elif [ "$type" == "P" ];then
        echo " \"fan$ii\":\"Psu\"   " >> ${Config_File}
        if [ "$ii" != "${FAN_MAX}" ];then
            echo "," >> ${Config_File}
        fi
    fi    
    i=$(($i+1))
done

echo "}" >> ${Config_File}
}

ONLP_THERMALS()
{
i=0
echo "
\"thermals\" :{" >> ${Config_File}

while [ "$i" -lt "${THERMAL_SEN_MAX}" ];do
    type=${thermals_type[${i}]}
    ii=$(($i+1))
    if [ "$type" == "C" ];then
        echo " \"thermal$ii\":\"CPU\"   " >> ${Config_File} 
        if [ "$ii" != "${THERMAL_SEN_MAX}" ];then
            echo "," >> ${Config_File}
        fi
    elif [ "$type" == "S" ];then
        echo " \"thermal$ii\":\"System\"   " >> ${Config_File}
        if [ "$ii" != "${THERMAL_SEN_MAX}" ];then
            echo "," >> ${Config_File}
        fi
    elif [ "$type" == "P" ];then
        echo " \"thermal$ii\":\"Psu\"   " >> ${Config_File}
        if [ "$ii" != "${THERMAL_SEN_MAX}" ];then
            echo "," >> ${Config_File}
        fi

    fi    
    i=$(($i+1))
done

echo "}" >> ${Config_File}
}

ONLP_PSUS()
{
i=0
echo "
\"psus\" :{" >> ${Config_File}

while [ "$i" -lt "${PSU_MAX}" ];do
    type=${psus_type[${i}]}
    ii=$(($i+1))
    if [ "$type" == "S" ];then
        echo " \"psu$ii\":\"System\"   " >> ${Config_File}
        if [ "$ii" != "${PSU_MAX}" ];then
            echo "," >> ${Config_File}
        fi
    fi    
    i=$(($i+1))
done

echo "}" >> ${Config_File}
}

ONLP_ITEMS()
{
echo "
\"onlp\" :
                {
                                \"fan_max_num\" : "${FAN_MAX}", "  >> ${Config_File}
ONLP_FANS
J_COMMA

echo "
                                \"port_max_num\" : "${PORT_MAX}", "  >> ${Config_File}
ONLP_PORTS
J_COMMA

echo "
                                \"thermal_sen_max_num\" : "${THERMAL_SEN_MAX}", "  >> ${Config_File}

ONLP_THERMALS
J_COMMA

echo "
                                \"psu_max_num\" : "${PSU_MAX}", "  >> ${Config_File}

ONLP_PSUS
J_COMMA

echo "
                                \"max_cpu_num\" : "${CPU_MAX}",
                                \"cpu_manu\" : \""${CPU_MANU}"\",
                                \"cpu_vid\" : \""${CPU_VID}"\",
                                \"cpu_stepping\" : "${CPU_STEPPING}",
                                \"cpu_model_name\" : "\"${CPU_MODEL_NAME}"\",
                                \"cpu_max_speed\" : "${CPU_MAX_SPEED}",
                                \"cpu_total_core\" : "${CPU_TOTAL_CORE}",                                                                                    
                                \"cpu_total_thread\" : "${CPU_TOTAL_THREAD}",
                                \"memory_total_count\" : "${MEM_TOTAL_C}",
                                \"drv_total_count\" : "${DRV_TOTAL_C}"
                        }


"  >> ${Config_File}
}



if [ -f "${PlatformPath}" ];then
    #Real Platform
    HW_type=`cat  ${PlatformPath}`
    ONLPDUMP="/lib/platform-config/${HW_type}/onl/bin/onlpdump"
else
    HW_type=`/usr/local/bin/sonic-cfggen -v platform`
    ONLPDUMP="/usr/bin/decode-syseeprom"
fi

if [ ! -f "${ASSET_TAG}" ];then
`echo "N/A" > ${ASSET_TAG} `
fi

if [ "$HW_type" != "arm-accton-as4610-54-r0" ];then
#Accton 5081 server
Product_name=`dmidecode -s system-product-name | grep SAU`
fi

if [ ! -f "${ONLPDUMP}" ] && [ ! "$Product_name" = "SAU5081" ] ;then
    # VM environment
    MANUFACTURER="ACCTON"
    SERIAL_NUMBER="S1234567890"
    ASSET_TAG_C=`cat "${ASSET_TAG}"`
    PLATFORM="BDCR"
    MODULE_NUMBER="M1234567890"
    NINF="ma1"
    TYPE="Drawer"
    FAN_MAX="8"
    THERMAL_SEN_MAX="7"
    PSU_MAX="2"
    PORT_MAX="54"
    CPU_MAX="4"
    CPU_MANU="Intel"   
    CPU_VID="Intel" 
    CPU_STEPPING="1" 
    CPU_MODEL_NAME="Intel"
    CPU_MAX_SPEED="2700" 
    CPU_TOTAL_CORE="1"
    CPU_TOTAL_THREAD="1"
    MEM_TOTAL_C="1"
    DRV_TOTAL_C="1"
    
else
    if [ -f "${PlatformPath}" ];then
    MANUFACTURER=`${ONLPDUMP} | grep -m 1 "Manufacturer" | awk -F':' '{print $2}' | sed -e "s/ //g"`
    SERIAL_NUMBER=`${ONLPDUMP} | grep -m 1 "Serial Number" | awk -F':' '{print $2}' | sed -e "s/ //g"`
    ASSET_TAG_C=`cat "${ASSET_TAG}"`
    PLATFORM="BDCR"
    MODULE_NUMBER=`${ONLPDUMP} | grep -m 1 "Part Number" | awk -F':' '{print $2}' | sed -e "s/ //g"`
    else
    MANUFACTURER=`${ONLPDUMP} | grep -m 1 "Manufacturer" | awk -F' ' '{print $4}' | sed -e "s/ //g"`
    SERIAL_NUMBER=`${ONLPDUMP} | grep -m 1 "Serial Number" | awk -F' ' '{print $5}' | sed -e "s/ //g"`
    ASSET_TAG_C=`cat "${ASSET_TAG}"`
    PLATFORM="BDCR"
    MODULE_NUMBER=`${ONLPDUMP} | grep -m 1 "Part Number" | awk -F' ' '{print $5}' | sed -e "s/ //g"`    
    fi
    NINF=`psme.sh get mgmt_port_name`
    sed -i "s/ma1/$NINF/g" /etc/psme/psme.conf 
    TYPE="Drawer"
    FAN_MAX=`psme.sh get max_fan_num`
    THERMAL_SEN_MAX=`psme.sh get thermal_sensor_num`
    PSU_MAX=`psme.sh get max_psu_num`
    PORT_MAX=`psme.sh get max_port_num`
    MEM_TOTAL_C=`collect_mem_info.sh MCOUNT`
    DRV_TOTAL_C=`collect_drv_info.sh MCOUNT`

if [ -f /usr/bin/lscpu ];then    
    #CPU_MAX=`lscpu | grep 'CPU(s):' -m1 | awk '{print $2}'`
    # Current CPU board only have 1 CPU (4 cores)
    CPU_MAX=1
    CPU_MANU=`lscpu | grep 'Arch'| awk -F'Architecture:' '{print $2}' | sed -e "s/ //g"`    
    CPU_VID=`lscpu | grep 'Vendor ID'| awk -F'Vendor ID:' '{print $2}' | sed -e "s/ //g"`
    CPU_STEPPING=`lscpu | grep 'Stepping'| awk -F'Stepping:' '{print $2}' | sed -e "s/ //g"` 
    CPU_MODEL_NAME=`lscpu | grep 'Model name'| awk -F'Model name:' '{print $2}' | sed -e "s/   //g"` 
    CPU_MAX_SPEED=`lscpu | grep 'CPU MHz:'| awk -F'CPU MHz:' '{print $2}' | sed -e "s/ //g"` 
    CPU_MAX_SPEED=${CPU_MAX_SPEED%.*}
    CPU_TOTAL_CORE=`lscpu | grep 'Core(s)'| awk -F'per socket:' '{print $2}' | sed -e "s/ //g"` 
    CPU_TOTAL_THREAD=`lscpu | grep 'Thread(s)'| awk -F'per core:' '{print $2}' | sed -e "s/ //g"`    


if [ "$HW_type" = "arm-accton-as4610-54-r0" ];then
    CPU_MAX="1"
    CPU_MANU="ARM"   
    CPU_VID="ARM" 
    CPU_STEPPING="1" 
    CPU_MODEL_NAME="ARMv7 Processor rev 0"
    CPU_MAX_SPEED="1993" 
    CPU_TOTAL_CORE="1"
    CPU_TOTAL_THREAD="1"
    MEM_TOTAL_C="1"
    DRV_TOTAL_C="1"
fi


else
    CPU_MANU="Intel"   
    CPU_VID="Intel" 
    CPU_STEPPING="1" 
    CPU_MODEL_NAME="Intel"
    CPU_MAX_SPEED="2700" 
    CPU_TOTAL_CORE="1"
    CPU_TOTAL_THREAD="1"
fi


fi

make_platform_info()
{
	echo "{
		\"managers\":  [
		{
			\""ipv4"\" : \""localhost"\",
				\""port"\" : 7788,
				\""slot"\" : 1,
				\""chassis"\" : {
				\""type"\"             : \""${TYPE}"\",
				\""size"\"             : 1,
				\""locationOffset"\"   : 1,
				\""parentId"\"         : 1,
				\""platform"\"         : \""${PLATFORM}"\",
				\""networkInterface"\" : \""${NINF}"\",
				\""asset_tag"\"        : \""${ASSET_TAG_C}"\",
				\""manufacturer"\"     : \""${MANUFACTURER}"\",
				\""model_number"\"     : \""${MODULE_NUMBER}"\",
				\""serial_number"\"    : \""${SERIAL_NUMBER}"\"
		}
		,
			\"onlp\" :
			{
				\"fan_max_num\" : "${FAN_MAX}",
				\"port_max_num\" : "${PORT_MAX}",
				\"thermal_sen_max_num\" : "${THERMAL_SEN_MAX}",
				\"psu_max_num\" : "${PSU_MAX}",
				\"max_cpu_num\" : "${CPU_MAX}",
				\"cpu_manu\" : \""${CPU_MANU}"\",	
				\"cpu_vid\" : \""${CPU_VID}"\",		
				\"cpu_stepping\" : "${CPU_STEPPING}",
				\"cpu_model_name\" : "\"${CPU_MODEL_NAME}"\",
                                \"cpu_max_speed\" : "${CPU_MAX_SPEED}",
				\"cpu_total_core\" : "${CPU_TOTAL_CORE}",												
				\"cpu_total_thread\" : "${CPU_TOTAL_THREAD}",
				\"memory_total_count\" : "${MEM_TOTAL_C}",
				\"drv_total_count\" : "${DRV_TOTAL_C}"
			}
		}
	]
}" > ${Config_File}
}

if [ -f "${Config_File}" ];then
`rm ${Config_File}`
fi
J_B_START
J_O_START managers
IPV4_ITEMS
J_COMMA
CHASSIS_ITEMS
J_COMMA
ONLP_ITEMS
J_O_END
J_B_END

#make_platform_info
